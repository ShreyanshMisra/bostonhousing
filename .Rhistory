ggplot(housing.df) +
aes(x = "", y = medv) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot2(housing.df) +
aes(x = "", y = medv) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
library(knitr)
library(ggplot2)
library(caret)
ggplot2(housing.df) +
aes(x = "", y = medv) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = medv) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
library(knitr)
library(ggplot2)
library(caret)
housing.df <- read.csv("boston_house_prices.csv")
nrow(housing.df) # number of rows
sum(is.na(housing.df)) # missing data
summary(housing.df)
ggplot(housing.df) +
aes(x = "", y = medv) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = medv) +
geom_boxplot(fill = "steelblue")
ggplot(housing.df) +
aes(x = "", y = crim) +
geom_boxplot(fill = "steelblue")
ggplot(housing.df) +
aes(x = "", y = crim) +
geom_boxplot(fill = "steelblue")
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = crim) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = mdev) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = medv) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
boxplot.stats(housing.df$medv)$out
ggplot(housing.df) +
aes(x = "", y = medv) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = lstat) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = crim) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = zn) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = indus) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = chas) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = nox) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = rm) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = age) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = dis) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = rad) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = tax) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = ptratio) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = lstat) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = medv) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = crim) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = zn) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = indus) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = chas) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = nox) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = rm) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = age) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = dis) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = rad) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = tax) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = ptratio) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = lstat) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = medv) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
housing_long <- housing.df %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
library(knitr)
library(ggplot2)
library(caret)
library(ggplot2)
library(tidyr)
library(dplyr)
housing.df <- read.csv("boston_house_prices.csv")
nrow(housing.df) # number of rows
sum(is.na(housing.df)) # missing data
summary(housing.df)
ggplot(housing.df) +
aes(x = "", y = crim) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = zn) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = indus) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = chas) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = nox) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = rm) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = age) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = dis) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = rad) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = tax) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = ptratio) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = lstat) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
ggplot(housing.df) +
aes(x = "", y = medv) +
geom_boxplot(fill = "steelblue") +
theme_minimal()
housing_long <- housing.df %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
# Plot with facet_wrap()
ggplot(housing_long, aes(x = "", y = value)) +
geom_boxplot(fill = "steelblue") +
theme_minimal() +
facet_wrap(~ variable, scales = "free_y") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
housing_box <- housing.df %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(housing_box, aes(x = "", y = value)) +
geom_boxplot(fill = "steelblue") +
theme_minimal() +
facet_wrap(~ variable, scales = "free_y") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
housing_box <- housing.df %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(housing_box, aes(x = "Variable", y = value)) +
geom_boxplot(fill = "steelblue") +
theme_minimal() +
facet_wrap(~ variable, scales = "free_y") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
housing_box <- housing.df %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(housing_long, aes(x = "", y = value)) +
geom_boxplot(fill = "steelblue") +
theme_minimal() +
facet_wrap(~ variable, scales = "free_y") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
housing_box <- housing.df %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(housing_long, aes(x = "", y = "Value")) +
geom_boxplot(fill = "steelblue") +
theme_minimal() +
facet_wrap(~ variable, scales = "free_y") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
housing_box <- housing.df %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(housing_long, aes(x = "", y = "value")) +
geom_boxplot(fill = "steelblue") +
theme_minimal() +
facet_wrap(~ variable, scales = "free_y") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
housing_box <- housing.df %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(housing_long, aes(x = "", y = value)) +
geom_boxplot(fill = "steelblue") +
theme_minimal() +
facet_wrap(~ variable, scales = "free_y") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
housing_box <- housing.df %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(housing_long, aes(x = "", y = value)) +
geom_boxplot(fill = "steelblue") +
theme_minimal() +
facet_wrap(~ variable, scales = "free_y") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
xlab("Variables")
housing_box <- housing.df %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(housing_long, aes(x = "", y = value)) +
geom_boxplot(fill = "steelblue") +
theme_minimal() +
facet_wrap(~ variable, scales = "free_y") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank() +
xlab(label) +
ylab(label))
housing_box <- housing.df %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(housing_long, aes(x = "", y = value)) +
geom_boxplot(fill = "steelblue") +
theme_minimal() +
facet_wrap(~ variable, scales = "free_y") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank() +
xlab("label") +
ylab("label"))
housing_box <- housing.df %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(housing_long, aes(x = "", y = value)) +
geom_boxplot(fill = "steelblue") +
theme_minimal() +
facet_wrap(~ variable, scales = "free_y") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()))
housing_box <- housing.df %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(housing_long, aes(x = "", y = value)) +
geom_boxplot(fill = "steelblue") +
theme_minimal() +
facet_wrap(~ variable, scales = "free_y") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
model_significant <- lm(medv ~ crim + zn + chas + nox + rm + dis + rad + tax + ptratio + lstat, data = train)
library(knitr)
library(ggplot2)
library(caret)
library(ggplot2)
library(tidyr)
library(dplyr)
housing.df <- read.csv("boston_house_prices.csv")
nrow(housing.df) # number of rows
sum(is.na(housing.df)) # missing data
summary(housing.df)
housing_box <- housing.df %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(housing_long, aes(x = "", y = value)) +
geom_boxplot(fill = "steelblue") +
theme_minimal() +
facet_wrap(~ variable, scales = "free_y") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
head(housing.df, 5)
set.seed(123)
split <- 0.7
trainIndex <- createDataPartition(housing.df$medv, p = split)
trainIndex <- unlist(trainIndex)
train <- housing.df[trainIndex, ]
test <- housing.df[-trainIndex, ]
nrow(train)
nrow(test)
model <- lm(medv ~ . , data = train)
summary(model)
model_significant <- lm(medv ~ crim + zn + chas + nox + rm + dis + rad + tax + ptratio + lstat, data = train)
summary(model_significant)
predictions <- predict(model, newdata = test)
actual <- test$medv
mae <- mean(abs(predictions - actual)) # MAE
mse <- mean((predictions - actual)^2) # MSE
rmse <- sqrt(mse) # RMSE
mae
mse
rmse
predictions <- predict(model_significant, newdata = test)
actual <- test$medv
mae <- mean(abs(predictions - actual)) # MAE
mse <- mean((predictions - actual)^2) # MSE
rmse <- sqrt(mse) # RMSE
mae
mse
rmse
